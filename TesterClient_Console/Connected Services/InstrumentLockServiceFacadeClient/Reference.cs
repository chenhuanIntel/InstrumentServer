//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TesterClient_Console.InstrumentLockServiceFacadeClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathFault", Namespace="http://schemas.datacontract.org/2004/07/InstrumentLockServices")]
    [System.SerializableAttribute()]
    public partial class MathFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProblemTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProblemType {
            get {
                return this.ProblemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemTypeField, value) != true)) {
                    this.ProblemTypeField = value;
                    this.RaisePropertyChanged("ProblemType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sharedInstrument", Namespace="http://schemas.datacontract.org/2004/07/InstrumentLockServices")]
    public enum sharedInstrument : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DCA = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDynamicConfig", Namespace="http://schemas.datacontract.org/2004/07/Utility")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolXConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolVISADotNetConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.WCFProtocolXConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.InstrumentXConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.ScopeConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.WCFScopeConfig))]
    public partial class CDynamicConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTargetAssemblyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTargetClassTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nIndex {
            get {
                return this.nIndexField;
            }
            set {
                if ((this.nIndexField.Equals(value) != true)) {
                    this.nIndexField = value;
                    this.RaisePropertyChanged("nIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strName {
            get {
                return this.strNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strNameField, value) != true)) {
                    this.strNameField = value;
                    this.RaisePropertyChanged("strName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTargetAssembly {
            get {
                return this.strTargetAssemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.strTargetAssemblyField, value) != true)) {
                    this.strTargetAssemblyField = value;
                    this.RaisePropertyChanged("strTargetAssembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTargetClassType {
            get {
                return this.strTargetClassTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.strTargetClassTypeField, value) != true)) {
                    this.strTargetClassTypeField = value;
                    this.RaisePropertyChanged("strTargetClassType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProtocolXConfig", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolVISADotNetConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.WCFProtocolXConfig))]
    public partial class ProtocolXConfig : TesterClient_Console.InstrumentLockServiceFacadeClient.CDynamicConfig {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxRetriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bSimulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bTakeScreenShotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bUseSimDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bVerboseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.CSimData mySimDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRetries {
            get {
                return this.MaxRetriesField;
            }
            set {
                if ((this.MaxRetriesField.Equals(value) != true)) {
                    this.MaxRetriesField = value;
                    this.RaisePropertyChanged("MaxRetries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSimulation {
            get {
                return this.bSimulationField;
            }
            set {
                if ((this.bSimulationField.Equals(value) != true)) {
                    this.bSimulationField = value;
                    this.RaisePropertyChanged("bSimulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bTakeScreenShot {
            get {
                return this.bTakeScreenShotField;
            }
            set {
                if ((this.bTakeScreenShotField.Equals(value) != true)) {
                    this.bTakeScreenShotField = value;
                    this.RaisePropertyChanged("bTakeScreenShot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bUseSimData {
            get {
                return this.bUseSimDataField;
            }
            set {
                if ((this.bUseSimDataField.Equals(value) != true)) {
                    this.bUseSimDataField = value;
                    this.RaisePropertyChanged("bUseSimData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bVerbose {
            get {
                return this.bVerboseField;
            }
            set {
                if ((this.bVerboseField.Equals(value) != true)) {
                    this.bVerboseField = value;
                    this.RaisePropertyChanged("bVerbose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.CSimData mySimData {
            get {
                return this.mySimDataField;
            }
            set {
                if ((object.ReferenceEquals(this.mySimDataField, value) != true)) {
                    this.mySimDataField = value;
                    this.RaisePropertyChanged("mySimData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProtocolVISADotNetConfig", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.WCFProtocolXConfig))]
    public partial class ProtocolVISADotNetConfig : TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolXConfig {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bAppendStringToCmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bClearSessionOnQueryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bRxTerminationCharacterEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bTxTerminationCharacterEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nReadBufferSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte nTerminationCharacterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nWriteBufferSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strToAppendField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resource {
            get {
                return this.ResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceField, value) != true)) {
                    this.ResourceField = value;
                    this.RaisePropertyChanged("Resource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bAppendStringToCmd {
            get {
                return this.bAppendStringToCmdField;
            }
            set {
                if ((this.bAppendStringToCmdField.Equals(value) != true)) {
                    this.bAppendStringToCmdField = value;
                    this.RaisePropertyChanged("bAppendStringToCmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bClearSessionOnQuery {
            get {
                return this.bClearSessionOnQueryField;
            }
            set {
                if ((this.bClearSessionOnQueryField.Equals(value) != true)) {
                    this.bClearSessionOnQueryField = value;
                    this.RaisePropertyChanged("bClearSessionOnQuery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bRxTerminationCharacterEnabled {
            get {
                return this.bRxTerminationCharacterEnabledField;
            }
            set {
                if ((this.bRxTerminationCharacterEnabledField.Equals(value) != true)) {
                    this.bRxTerminationCharacterEnabledField = value;
                    this.RaisePropertyChanged("bRxTerminationCharacterEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bTxTerminationCharacterEnabled {
            get {
                return this.bTxTerminationCharacterEnabledField;
            }
            set {
                if ((this.bTxTerminationCharacterEnabledField.Equals(value) != true)) {
                    this.bTxTerminationCharacterEnabledField = value;
                    this.RaisePropertyChanged("bTxTerminationCharacterEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nReadBufferSize {
            get {
                return this.nReadBufferSizeField;
            }
            set {
                if ((this.nReadBufferSizeField.Equals(value) != true)) {
                    this.nReadBufferSizeField = value;
                    this.RaisePropertyChanged("nReadBufferSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte nTerminationCharacter {
            get {
                return this.nTerminationCharacterField;
            }
            set {
                if ((this.nTerminationCharacterField.Equals(value) != true)) {
                    this.nTerminationCharacterField = value;
                    this.RaisePropertyChanged("nTerminationCharacter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nTimeout {
            get {
                return this.nTimeoutField;
            }
            set {
                if ((this.nTimeoutField.Equals(value) != true)) {
                    this.nTimeoutField = value;
                    this.RaisePropertyChanged("nTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nWriteBufferSize {
            get {
                return this.nWriteBufferSizeField;
            }
            set {
                if ((this.nWriteBufferSizeField.Equals(value) != true)) {
                    this.nWriteBufferSizeField = value;
                    this.RaisePropertyChanged("nWriteBufferSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strToAppend {
            get {
                return this.strToAppendField;
            }
            set {
                if ((object.ReferenceEquals(this.strToAppendField, value) != true)) {
                    this.strToAppendField = value;
                    this.RaisePropertyChanged("strToAppend");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFProtocolXConfig", Namespace="http://schemas.datacontract.org/2004/07/InstrumentLockServices")]
    [System.SerializableAttribute()]
    public partial class WCFProtocolXConfig : TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolVISADotNetConfig {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstrumentXConfig", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.ScopeConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.WCFScopeConfig))]
    public partial class InstrumentXConfig : TesterClient_Console.InstrumentLockServiceFacadeClient.CDynamicConfig {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChanVariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUTVariantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxRetriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolObjectRefNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bCreateProtocolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bIsPooledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bIsRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bSimulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bTempCompensateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bVerboseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dAttenOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nAdditionalReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nRetryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolXConfig protocolCfgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double standardDeviationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChanVariant {
            get {
                return this.ChanVariantField;
            }
            set {
                if ((object.ReferenceEquals(this.ChanVariantField, value) != true)) {
                    this.ChanVariantField = value;
                    this.RaisePropertyChanged("ChanVariant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUTVariant {
            get {
                return this.DUTVariantField;
            }
            set {
                if ((object.ReferenceEquals(this.DUTVariantField, value) != true)) {
                    this.DUTVariantField = value;
                    this.RaisePropertyChanged("DUTVariant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxRetries {
            get {
                return this.MaxRetriesField;
            }
            set {
                if ((this.MaxRetriesField.Equals(value) != true)) {
                    this.MaxRetriesField = value;
                    this.RaisePropertyChanged("MaxRetries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolObjectRefName {
            get {
                return this.ProtocolObjectRefNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolObjectRefNameField, value) != true)) {
                    this.ProtocolObjectRefNameField = value;
                    this.RaisePropertyChanged("ProtocolObjectRefName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bCreateProtocol {
            get {
                return this.bCreateProtocolField;
            }
            set {
                if ((this.bCreateProtocolField.Equals(value) != true)) {
                    this.bCreateProtocolField = value;
                    this.RaisePropertyChanged("bCreateProtocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bIsPooled {
            get {
                return this.bIsPooledField;
            }
            set {
                if ((this.bIsPooledField.Equals(value) != true)) {
                    this.bIsPooledField = value;
                    this.RaisePropertyChanged("bIsPooled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bIsRef {
            get {
                return this.bIsRefField;
            }
            set {
                if ((this.bIsRefField.Equals(value) != true)) {
                    this.bIsRefField = value;
                    this.RaisePropertyChanged("bIsRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSimulation {
            get {
                return this.bSimulationField;
            }
            set {
                if ((this.bSimulationField.Equals(value) != true)) {
                    this.bSimulationField = value;
                    this.RaisePropertyChanged("bSimulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bTempCompensate {
            get {
                return this.bTempCompensateField;
            }
            set {
                if ((this.bTempCompensateField.Equals(value) != true)) {
                    this.bTempCompensateField = value;
                    this.RaisePropertyChanged("bTempCompensate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bVerbose {
            get {
                return this.bVerboseField;
            }
            set {
                if ((this.bVerboseField.Equals(value) != true)) {
                    this.bVerboseField = value;
                    this.RaisePropertyChanged("bVerbose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dAttenOffset {
            get {
                return this.dAttenOffsetField;
            }
            set {
                if ((this.dAttenOffsetField.Equals(value) != true)) {
                    this.dAttenOffsetField = value;
                    this.RaisePropertyChanged("dAttenOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nAdditionalRead {
            get {
                return this.nAdditionalReadField;
            }
            set {
                if ((this.nAdditionalReadField.Equals(value) != true)) {
                    this.nAdditionalReadField = value;
                    this.RaisePropertyChanged("nAdditionalRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nRetry {
            get {
                return this.nRetryField;
            }
            set {
                if ((this.nRetryField.Equals(value) != true)) {
                    this.nRetryField = value;
                    this.RaisePropertyChanged("nRetry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.ProtocolXConfig protocolCfg {
            get {
                return this.protocolCfgField;
            }
            set {
                if ((object.ReferenceEquals(this.protocolCfgField, value) != true)) {
                    this.protocolCfgField = value;
                    this.RaisePropertyChanged("protocolCfg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double standardDeviation {
            get {
                return this.standardDeviationField;
            }
            set {
                if ((this.standardDeviationField.Equals(value) != true)) {
                    this.standardDeviationField = value;
                    this.RaisePropertyChanged("standardDeviation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScopeConfig", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.WCFScopeConfig))]
    public partial class ScopeConfig : TesterClient_Console.InstrumentLockServiceFacadeClient.InstrumentXConfig {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompressLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OERFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OffsetTDECQMinLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TDECQOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] arChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.DCA_A86100C_Flex400G_V3ComputeInstrumentBase[] arComputeHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.DCA_A86100C_Flex400G_V3ComputeInstrumentBase[] arDCAMHostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bAutoScaleScreenShotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bAutoScaleScreenShotWhenExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bCheckBusyAfterPatternLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bDCAMWithDedicatedPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bDebugRelaunchDCAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bEmbCRUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bRelaunchDCAWhenExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bShrinkEyeFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bTakeScreenShotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bUseOOMACalcMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dImageSaveWaitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dMaxBusyTimeoutSecsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dMaxCRULockTimeoutSecsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dMaxLoadSetupTimeoutSecsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double iMaxCRULockRetryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iRelaunchDCATimeOut_minField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, TesterClient_Console.InstrumentLockServiceFacadeClient.DCASettings> mapDCASettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, TesterClient_Console.InstrumentLockServiceFacadeClient.MeasurementCmd> mapOverridenMeasCmdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<double, double> mapTDECQPiecewiseLinearFitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nRetryAutoScaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sRFSwitchNameForTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strDCA_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompressLevel {
            get {
                return this.CompressLevelField;
            }
            set {
                if ((this.CompressLevelField.Equals(value) != true)) {
                    this.CompressLevelField = value;
                    this.RaisePropertyChanged("CompressLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] OERFactor {
            get {
                return this.OERFactorField;
            }
            set {
                if ((object.ReferenceEquals(this.OERFactorField, value) != true)) {
                    this.OERFactorField = value;
                    this.RaisePropertyChanged("OERFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OffsetTDECQMinLimit {
            get {
                return this.OffsetTDECQMinLimitField;
            }
            set {
                if ((this.OffsetTDECQMinLimitField.Equals(value) != true)) {
                    this.OffsetTDECQMinLimitField = value;
                    this.RaisePropertyChanged("OffsetTDECQMinLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TDECQOffset {
            get {
                return this.TDECQOffsetField;
            }
            set {
                if ((this.TDECQOffsetField.Equals(value) != true)) {
                    this.TDECQOffsetField = value;
                    this.RaisePropertyChanged("TDECQOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] arChannels {
            get {
                return this.arChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.arChannelsField, value) != true)) {
                    this.arChannelsField = value;
                    this.RaisePropertyChanged("arChannels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.DCA_A86100C_Flex400G_V3ComputeInstrumentBase[] arComputeHost {
            get {
                return this.arComputeHostField;
            }
            set {
                if ((object.ReferenceEquals(this.arComputeHostField, value) != true)) {
                    this.arComputeHostField = value;
                    this.RaisePropertyChanged("arComputeHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.DCA_A86100C_Flex400G_V3ComputeInstrumentBase[] arDCAMHost {
            get {
                return this.arDCAMHostField;
            }
            set {
                if ((object.ReferenceEquals(this.arDCAMHostField, value) != true)) {
                    this.arDCAMHostField = value;
                    this.RaisePropertyChanged("arDCAMHost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bAutoScaleScreenShot {
            get {
                return this.bAutoScaleScreenShotField;
            }
            set {
                if ((this.bAutoScaleScreenShotField.Equals(value) != true)) {
                    this.bAutoScaleScreenShotField = value;
                    this.RaisePropertyChanged("bAutoScaleScreenShot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bAutoScaleScreenShotWhenException {
            get {
                return this.bAutoScaleScreenShotWhenExceptionField;
            }
            set {
                if ((this.bAutoScaleScreenShotWhenExceptionField.Equals(value) != true)) {
                    this.bAutoScaleScreenShotWhenExceptionField = value;
                    this.RaisePropertyChanged("bAutoScaleScreenShotWhenException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bCheckBusyAfterPatternLock {
            get {
                return this.bCheckBusyAfterPatternLockField;
            }
            set {
                if ((this.bCheckBusyAfterPatternLockField.Equals(value) != true)) {
                    this.bCheckBusyAfterPatternLockField = value;
                    this.RaisePropertyChanged("bCheckBusyAfterPatternLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bDCAMWithDedicatedPC {
            get {
                return this.bDCAMWithDedicatedPCField;
            }
            set {
                if ((this.bDCAMWithDedicatedPCField.Equals(value) != true)) {
                    this.bDCAMWithDedicatedPCField = value;
                    this.RaisePropertyChanged("bDCAMWithDedicatedPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bDebugRelaunchDCA {
            get {
                return this.bDebugRelaunchDCAField;
            }
            set {
                if ((this.bDebugRelaunchDCAField.Equals(value) != true)) {
                    this.bDebugRelaunchDCAField = value;
                    this.RaisePropertyChanged("bDebugRelaunchDCA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bEmbCRU {
            get {
                return this.bEmbCRUField;
            }
            set {
                if ((this.bEmbCRUField.Equals(value) != true)) {
                    this.bEmbCRUField = value;
                    this.RaisePropertyChanged("bEmbCRU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bRelaunchDCAWhenException {
            get {
                return this.bRelaunchDCAWhenExceptionField;
            }
            set {
                if ((this.bRelaunchDCAWhenExceptionField.Equals(value) != true)) {
                    this.bRelaunchDCAWhenExceptionField = value;
                    this.RaisePropertyChanged("bRelaunchDCAWhenException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bShrinkEyeFile {
            get {
                return this.bShrinkEyeFileField;
            }
            set {
                if ((this.bShrinkEyeFileField.Equals(value) != true)) {
                    this.bShrinkEyeFileField = value;
                    this.RaisePropertyChanged("bShrinkEyeFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bTakeScreenShot {
            get {
                return this.bTakeScreenShotField;
            }
            set {
                if ((this.bTakeScreenShotField.Equals(value) != true)) {
                    this.bTakeScreenShotField = value;
                    this.RaisePropertyChanged("bTakeScreenShot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bUseOOMACalcMethod {
            get {
                return this.bUseOOMACalcMethodField;
            }
            set {
                if ((this.bUseOOMACalcMethodField.Equals(value) != true)) {
                    this.bUseOOMACalcMethodField = value;
                    this.RaisePropertyChanged("bUseOOMACalcMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dImageSaveWaitTime {
            get {
                return this.dImageSaveWaitTimeField;
            }
            set {
                if ((this.dImageSaveWaitTimeField.Equals(value) != true)) {
                    this.dImageSaveWaitTimeField = value;
                    this.RaisePropertyChanged("dImageSaveWaitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dMaxBusyTimeoutSecs {
            get {
                return this.dMaxBusyTimeoutSecsField;
            }
            set {
                if ((this.dMaxBusyTimeoutSecsField.Equals(value) != true)) {
                    this.dMaxBusyTimeoutSecsField = value;
                    this.RaisePropertyChanged("dMaxBusyTimeoutSecs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dMaxCRULockTimeoutSecs {
            get {
                return this.dMaxCRULockTimeoutSecsField;
            }
            set {
                if ((this.dMaxCRULockTimeoutSecsField.Equals(value) != true)) {
                    this.dMaxCRULockTimeoutSecsField = value;
                    this.RaisePropertyChanged("dMaxCRULockTimeoutSecs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dMaxLoadSetupTimeoutSecs {
            get {
                return this.dMaxLoadSetupTimeoutSecsField;
            }
            set {
                if ((this.dMaxLoadSetupTimeoutSecsField.Equals(value) != true)) {
                    this.dMaxLoadSetupTimeoutSecsField = value;
                    this.RaisePropertyChanged("dMaxLoadSetupTimeoutSecs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double iMaxCRULockRetry {
            get {
                return this.iMaxCRULockRetryField;
            }
            set {
                if ((this.iMaxCRULockRetryField.Equals(value) != true)) {
                    this.iMaxCRULockRetryField = value;
                    this.RaisePropertyChanged("iMaxCRULockRetry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iRelaunchDCATimeOut_min {
            get {
                return this.iRelaunchDCATimeOut_minField;
            }
            set {
                if ((this.iRelaunchDCATimeOut_minField.Equals(value) != true)) {
                    this.iRelaunchDCATimeOut_minField = value;
                    this.RaisePropertyChanged("iRelaunchDCATimeOut_min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, TesterClient_Console.InstrumentLockServiceFacadeClient.DCASettings> mapDCASettings {
            get {
                return this.mapDCASettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.mapDCASettingsField, value) != true)) {
                    this.mapDCASettingsField = value;
                    this.RaisePropertyChanged("mapDCASettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, TesterClient_Console.InstrumentLockServiceFacadeClient.MeasurementCmd> mapOverridenMeasCmds {
            get {
                return this.mapOverridenMeasCmdsField;
            }
            set {
                if ((object.ReferenceEquals(this.mapOverridenMeasCmdsField, value) != true)) {
                    this.mapOverridenMeasCmdsField = value;
                    this.RaisePropertyChanged("mapOverridenMeasCmds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<double, double> mapTDECQPiecewiseLinearFit {
            get {
                return this.mapTDECQPiecewiseLinearFitField;
            }
            set {
                if ((object.ReferenceEquals(this.mapTDECQPiecewiseLinearFitField, value) != true)) {
                    this.mapTDECQPiecewiseLinearFitField = value;
                    this.RaisePropertyChanged("mapTDECQPiecewiseLinearFit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nRetryAutoScale {
            get {
                return this.nRetryAutoScaleField;
            }
            set {
                if ((this.nRetryAutoScaleField.Equals(value) != true)) {
                    this.nRetryAutoScaleField = value;
                    this.RaisePropertyChanged("nRetryAutoScale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sRFSwitchNameForTrigger {
            get {
                return this.sRFSwitchNameForTriggerField;
            }
            set {
                if ((object.ReferenceEquals(this.sRFSwitchNameForTriggerField, value) != true)) {
                    this.sRFSwitchNameForTriggerField = value;
                    this.RaisePropertyChanged("sRFSwitchNameForTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strDCA_ID {
            get {
                return this.strDCA_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.strDCA_IDField, value) != true)) {
                    this.strDCA_IDField = value;
                    this.RaisePropertyChanged("strDCA_ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WCFScopeConfig", Namespace="http://schemas.datacontract.org/2004/07/InstrumentLockServices")]
    [System.SerializableAttribute()]
    public partial class WCFScopeConfig : TesterClient_Console.InstrumentLockServiceFacadeClient.ScopeConfig {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCA_A86100C_Flex400G_V3.ComputeInstrumentBase", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    public partial class DCA_A86100C_Flex400G_V3ComputeInstrumentBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCASettings", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    public partial class DCASettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ACQSmoothAveNumWaveformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmplitudeMeasUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.CRUSetupcmd CRUsetupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EyeAcqWavLimValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EyeAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EyePatLenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EyePointsPerWaveformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JittAcqLimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JittAcqLimValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JittAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JittPatLenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JittPatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JitterMeasUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaskMarginHitsLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaskMarginValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OscAcqLimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OscAcqLimValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PAM4AcqPatLimValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.PAMSetupcmd PAM4setupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PowerUnitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RINoiseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RINoiseUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.TEQualizerSetupcmd TEQsetupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bACQSmoothAverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bEnableMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bSetMeasUnitsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bSetupParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bTEQualizerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dCaptureEyePause_sField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sDCAConfigFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sDCA_MaskFileNameWithPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sDSASetupFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sDisplayModeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ACQSmoothAveNumWaveform {
            get {
                return this.ACQSmoothAveNumWaveformField;
            }
            set {
                if ((this.ACQSmoothAveNumWaveformField.Equals(value) != true)) {
                    this.ACQSmoothAveNumWaveformField = value;
                    this.RaisePropertyChanged("ACQSmoothAveNumWaveform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmplitudeMeasUnitType {
            get {
                return this.AmplitudeMeasUnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AmplitudeMeasUnitTypeField, value) != true)) {
                    this.AmplitudeMeasUnitTypeField = value;
                    this.RaisePropertyChanged("AmplitudeMeasUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.CRUSetupcmd CRUsetup {
            get {
                return this.CRUsetupField;
            }
            set {
                if ((object.ReferenceEquals(this.CRUsetupField, value) != true)) {
                    this.CRUsetupField = value;
                    this.RaisePropertyChanged("CRUsetup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EyeAcqWavLimVal {
            get {
                return this.EyeAcqWavLimValField;
            }
            set {
                if ((this.EyeAcqWavLimValField.Equals(value) != true)) {
                    this.EyeAcqWavLimValField = value;
                    this.RaisePropertyChanged("EyeAcqWavLimVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EyeAvg {
            get {
                return this.EyeAvgField;
            }
            set {
                if ((this.EyeAvgField.Equals(value) != true)) {
                    this.EyeAvgField = value;
                    this.RaisePropertyChanged("EyeAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EyePatLen {
            get {
                return this.EyePatLenField;
            }
            set {
                if ((this.EyePatLenField.Equals(value) != true)) {
                    this.EyePatLenField = value;
                    this.RaisePropertyChanged("EyePatLen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EyePointsPerWaveform {
            get {
                return this.EyePointsPerWaveformField;
            }
            set {
                if ((object.ReferenceEquals(this.EyePointsPerWaveformField, value) != true)) {
                    this.EyePointsPerWaveformField = value;
                    this.RaisePropertyChanged("EyePointsPerWaveform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JittAcqLimType {
            get {
                return this.JittAcqLimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JittAcqLimTypeField, value) != true)) {
                    this.JittAcqLimTypeField = value;
                    this.RaisePropertyChanged("JittAcqLimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JittAcqLimVal {
            get {
                return this.JittAcqLimValField;
            }
            set {
                if ((object.ReferenceEquals(this.JittAcqLimValField, value) != true)) {
                    this.JittAcqLimValField = value;
                    this.RaisePropertyChanged("JittAcqLimVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JittAvg {
            get {
                return this.JittAvgField;
            }
            set {
                if ((object.ReferenceEquals(this.JittAvgField, value) != true)) {
                    this.JittAvgField = value;
                    this.RaisePropertyChanged("JittAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JittPatLen {
            get {
                return this.JittPatLenField;
            }
            set {
                if ((object.ReferenceEquals(this.JittPatLenField, value) != true)) {
                    this.JittPatLenField = value;
                    this.RaisePropertyChanged("JittPatLen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JittPatType {
            get {
                return this.JittPatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JittPatTypeField, value) != true)) {
                    this.JittPatTypeField = value;
                    this.RaisePropertyChanged("JittPatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JitterMeasUnitType {
            get {
                return this.JitterMeasUnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JitterMeasUnitTypeField, value) != true)) {
                    this.JitterMeasUnitTypeField = value;
                    this.RaisePropertyChanged("JitterMeasUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaskMarginHitsLimit {
            get {
                return this.MaskMarginHitsLimitField;
            }
            set {
                if ((this.MaskMarginHitsLimitField.Equals(value) != true)) {
                    this.MaskMarginHitsLimitField = value;
                    this.RaisePropertyChanged("MaskMarginHitsLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaskMarginValue {
            get {
                return this.MaskMarginValueField;
            }
            set {
                if ((this.MaskMarginValueField.Equals(value) != true)) {
                    this.MaskMarginValueField = value;
                    this.RaisePropertyChanged("MaskMarginValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OscAcqLimType {
            get {
                return this.OscAcqLimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OscAcqLimTypeField, value) != true)) {
                    this.OscAcqLimTypeField = value;
                    this.RaisePropertyChanged("OscAcqLimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OscAcqLimVal {
            get {
                return this.OscAcqLimValField;
            }
            set {
                if ((object.ReferenceEquals(this.OscAcqLimValField, value) != true)) {
                    this.OscAcqLimValField = value;
                    this.RaisePropertyChanged("OscAcqLimVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PAM4AcqPatLimVal {
            get {
                return this.PAM4AcqPatLimValField;
            }
            set {
                if ((this.PAM4AcqPatLimValField.Equals(value) != true)) {
                    this.PAM4AcqPatLimValField = value;
                    this.RaisePropertyChanged("PAM4AcqPatLimVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.PAMSetupcmd PAM4setup {
            get {
                return this.PAM4setupField;
            }
            set {
                if ((object.ReferenceEquals(this.PAM4setupField, value) != true)) {
                    this.PAM4setupField = value;
                    this.RaisePropertyChanged("PAM4setup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PowerUnitType {
            get {
                return this.PowerUnitTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerUnitTypeField, value) != true)) {
                    this.PowerUnitTypeField = value;
                    this.RaisePropertyChanged("PowerUnitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RINoiseType {
            get {
                return this.RINoiseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RINoiseTypeField, value) != true)) {
                    this.RINoiseTypeField = value;
                    this.RaisePropertyChanged("RINoiseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RINoiseUnits {
            get {
                return this.RINoiseUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.RINoiseUnitsField, value) != true)) {
                    this.RINoiseUnitsField = value;
                    this.RaisePropertyChanged("RINoiseUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.TEQualizerSetupcmd TEQsetup {
            get {
                return this.TEQsetupField;
            }
            set {
                if ((object.ReferenceEquals(this.TEQsetupField, value) != true)) {
                    this.TEQsetupField = value;
                    this.RaisePropertyChanged("TEQsetup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bACQSmoothAverage {
            get {
                return this.bACQSmoothAverageField;
            }
            set {
                if ((this.bACQSmoothAverageField.Equals(value) != true)) {
                    this.bACQSmoothAverageField = value;
                    this.RaisePropertyChanged("bACQSmoothAverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bEnableMask {
            get {
                return this.bEnableMaskField;
            }
            set {
                if ((this.bEnableMaskField.Equals(value) != true)) {
                    this.bEnableMaskField = value;
                    this.RaisePropertyChanged("bEnableMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSetMeasUnitsType {
            get {
                return this.bSetMeasUnitsTypeField;
            }
            set {
                if ((this.bSetMeasUnitsTypeField.Equals(value) != true)) {
                    this.bSetMeasUnitsTypeField = value;
                    this.RaisePropertyChanged("bSetMeasUnitsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSetupParam {
            get {
                return this.bSetupParamField;
            }
            set {
                if ((this.bSetupParamField.Equals(value) != true)) {
                    this.bSetupParamField = value;
                    this.RaisePropertyChanged("bSetupParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bTEQualizer {
            get {
                return this.bTEQualizerField;
            }
            set {
                if ((this.bTEQualizerField.Equals(value) != true)) {
                    this.bTEQualizerField = value;
                    this.RaisePropertyChanged("bTEQualizer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dCaptureEyePause_s {
            get {
                return this.dCaptureEyePause_sField;
            }
            set {
                if ((this.dCaptureEyePause_sField.Equals(value) != true)) {
                    this.dCaptureEyePause_sField = value;
                    this.RaisePropertyChanged("dCaptureEyePause_s");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sDCAConfigFile {
            get {
                return this.sDCAConfigFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sDCAConfigFileField, value) != true)) {
                    this.sDCAConfigFileField = value;
                    this.RaisePropertyChanged("sDCAConfigFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sDCA_MaskFileNameWithPath {
            get {
                return this.sDCA_MaskFileNameWithPathField;
            }
            set {
                if ((object.ReferenceEquals(this.sDCA_MaskFileNameWithPathField, value) != true)) {
                    this.sDCA_MaskFileNameWithPathField = value;
                    this.RaisePropertyChanged("sDCA_MaskFileNameWithPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sDSASetupFile {
            get {
                return this.sDSASetupFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sDSASetupFileField, value) != true)) {
                    this.sDSASetupFileField = value;
                    this.RaisePropertyChanged("sDSASetupFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sDisplayMode {
            get {
                return this.sDisplayModeField;
            }
            set {
                if ((object.ReferenceEquals(this.sDisplayModeField, value) != true)) {
                    this.sDisplayModeField = value;
                    this.RaisePropertyChanged("sDisplayMode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementCmd", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.DCASetupcmd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.PAMSetupcmd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.TEQualizerSetupcmd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.CRUSetupcmd))]
    public partial class MeasurementCmd : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CSimData", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    public partial class CSimData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.CSimGenericDataOfdouble DoubleDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.CSimGenericDataOfint IntDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.CSimGenericDataOfstring StringDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.CSimGenericDataOfdouble DoubleData {
            get {
                return this.DoubleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.DoubleDataField, value) != true)) {
                    this.DoubleDataField = value;
                    this.RaisePropertyChanged("DoubleData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.CSimGenericDataOfint IntData {
            get {
                return this.IntDataField;
            }
            set {
                if ((object.ReferenceEquals(this.IntDataField, value) != true)) {
                    this.IntDataField = value;
                    this.RaisePropertyChanged("IntData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.CSimGenericDataOfstring StringData {
            get {
                return this.StringDataField;
            }
            set {
                if ((object.ReferenceEquals(this.StringDataField, value) != true)) {
                    this.StringDataField = value;
                    this.RaisePropertyChanged("StringData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CSimGenericDataOfdouble", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    public partial class CSimGenericDataOfdouble : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] DataListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CSimGenericDataOfint", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    public partial class CSimGenericDataOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] DataListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CSimGenericDataOfstring", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Core")]
    [System.SerializableAttribute()]
    public partial class CSimGenericDataOfstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DataListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CRUSetupcmd", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    public partial class CRUSetupcmd : TesterClient_Console.InstrumentLockServiceFacadeClient.DCASetupcmd {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CRATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EHGainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ODRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ODRatioAUTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SLOTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SOURCEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dMaxBusyTimeoutSecsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CRATE {
            get {
                return this.CRATEField;
            }
            set {
                if ((object.ReferenceEquals(this.CRATEField, value) != true)) {
                    this.CRATEField = value;
                    this.RaisePropertyChanged("CRATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EHGain {
            get {
                return this.EHGainField;
            }
            set {
                if ((object.ReferenceEquals(this.EHGainField, value) != true)) {
                    this.EHGainField = value;
                    this.RaisePropertyChanged("EHGain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ODRatio {
            get {
                return this.ODRatioField;
            }
            set {
                if ((object.ReferenceEquals(this.ODRatioField, value) != true)) {
                    this.ODRatioField = value;
                    this.RaisePropertyChanged("ODRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ODRatioAUTO {
            get {
                return this.ODRatioAUTOField;
            }
            set {
                if ((object.ReferenceEquals(this.ODRatioAUTOField, value) != true)) {
                    this.ODRatioAUTOField = value;
                    this.RaisePropertyChanged("ODRatioAUTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Preset {
            get {
                return this.PresetField;
            }
            set {
                if ((object.ReferenceEquals(this.PresetField, value) != true)) {
                    this.PresetField = value;
                    this.RaisePropertyChanged("Preset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SLOT {
            get {
                return this.SLOTField;
            }
            set {
                if ((object.ReferenceEquals(this.SLOTField, value) != true)) {
                    this.SLOTField = value;
                    this.RaisePropertyChanged("SLOT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOURCE {
            get {
                return this.SOURCEField;
            }
            set {
                if ((object.ReferenceEquals(this.SOURCEField, value) != true)) {
                    this.SOURCEField = value;
                    this.RaisePropertyChanged("SOURCE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dMaxBusyTimeoutSecs {
            get {
                return this.dMaxBusyTimeoutSecsField;
            }
            set {
                if ((this.dMaxBusyTimeoutSecsField.Equals(value) != true)) {
                    this.dMaxBusyTimeoutSecsField = value;
                    this.RaisePropertyChanged("dMaxBusyTimeoutSecs");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PAMSetupcmd", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    public partial class PAMSetupcmd : TesterClient_Console.InstrumentLockServiceFacadeClient.DCASetupcmd {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AMPL_UNITsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EYE_ELMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EYE_ESTimingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EYE_PPERcentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EYE_TIME_LTDefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EYE_TIME_UNITsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PATTernsLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_HWIDthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_OHSeparationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_OHTHresholdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_OHTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_PRESetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_TALimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TDEQ_TSERField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AMPL_UNITs {
            get {
                return this.AMPL_UNITsField;
            }
            set {
                if ((object.ReferenceEquals(this.AMPL_UNITsField, value) != true)) {
                    this.AMPL_UNITsField = value;
                    this.RaisePropertyChanged("AMPL_UNITs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EYE_ELMethod {
            get {
                return this.EYE_ELMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.EYE_ELMethodField, value) != true)) {
                    this.EYE_ELMethodField = value;
                    this.RaisePropertyChanged("EYE_ELMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EYE_ESTiming {
            get {
                return this.EYE_ESTimingField;
            }
            set {
                if ((object.ReferenceEquals(this.EYE_ESTimingField, value) != true)) {
                    this.EYE_ESTimingField = value;
                    this.RaisePropertyChanged("EYE_ESTiming");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EYE_PPERcent {
            get {
                return this.EYE_PPERcentField;
            }
            set {
                if ((object.ReferenceEquals(this.EYE_PPERcentField, value) != true)) {
                    this.EYE_PPERcentField = value;
                    this.RaisePropertyChanged("EYE_PPERcent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EYE_TIME_LTDefinition {
            get {
                return this.EYE_TIME_LTDefinitionField;
            }
            set {
                if ((object.ReferenceEquals(this.EYE_TIME_LTDefinitionField, value) != true)) {
                    this.EYE_TIME_LTDefinitionField = value;
                    this.RaisePropertyChanged("EYE_TIME_LTDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EYE_TIME_UNITs {
            get {
                return this.EYE_TIME_UNITsField;
            }
            set {
                if ((object.ReferenceEquals(this.EYE_TIME_UNITsField, value) != true)) {
                    this.EYE_TIME_UNITsField = value;
                    this.RaisePropertyChanged("EYE_TIME_UNITs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PATTernsLimit {
            get {
                return this.PATTernsLimitField;
            }
            set {
                if ((object.ReferenceEquals(this.PATTernsLimitField, value) != true)) {
                    this.PATTernsLimitField = value;
                    this.RaisePropertyChanged("PATTernsLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_HWIDth {
            get {
                return this.TDEQ_HWIDthField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_HWIDthField, value) != true)) {
                    this.TDEQ_HWIDthField = value;
                    this.RaisePropertyChanged("TDEQ_HWIDth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_OHSeparation {
            get {
                return this.TDEQ_OHSeparationField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_OHSeparationField, value) != true)) {
                    this.TDEQ_OHSeparationField = value;
                    this.RaisePropertyChanged("TDEQ_OHSeparation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_OHTHresholds {
            get {
                return this.TDEQ_OHTHresholdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_OHTHresholdsField, value) != true)) {
                    this.TDEQ_OHTHresholdsField = value;
                    this.RaisePropertyChanged("TDEQ_OHTHresholds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_OHTime {
            get {
                return this.TDEQ_OHTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_OHTimeField, value) != true)) {
                    this.TDEQ_OHTimeField = value;
                    this.RaisePropertyChanged("TDEQ_OHTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_PRESets {
            get {
                return this.TDEQ_PRESetsField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_PRESetsField, value) != true)) {
                    this.TDEQ_PRESetsField = value;
                    this.RaisePropertyChanged("TDEQ_PRESets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_TALimit {
            get {
                return this.TDEQ_TALimitField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_TALimitField, value) != true)) {
                    this.TDEQ_TALimitField = value;
                    this.RaisePropertyChanged("TDEQ_TALimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TDEQ_TSER {
            get {
                return this.TDEQ_TSERField;
            }
            set {
                if ((object.ReferenceEquals(this.TDEQ_TSERField, value) != true)) {
                    this.TDEQ_TSERField = value;
                    this.RaisePropertyChanged("TDEQ_TSER");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TEQualizerSetupcmd", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    public partial class TEQualizerSetupcmd : TesterClient_Console.InstrumentLockServiceFacadeClient.DCASetupcmd {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AverageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DCAMeasureChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.EnumEyeLinearityDefinition EyeLinearityDefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.EnumEyeWidthOpeningDefinition EyeWidthOpeningDefinitionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EyeWidthOpeningProbabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.EnumDCAOptions IterativeOptimizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPrecursorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfTapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.EnumDCAOptions TDEQThresholdOptimizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TapsPerUIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.EnumTEQualizerPreset TdecqConfigurationPresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TesterClient_Console.InstrumentLockServiceFacadeClient.EnumTEQualizerPreset TdecqEqualizerPresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bOffloadComputeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bSeperateAcqTEQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nChannelUsedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AverageCount {
            get {
                return this.AverageCountField;
            }
            set {
                if ((this.AverageCountField.Equals(value) != true)) {
                    this.AverageCountField = value;
                    this.RaisePropertyChanged("AverageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DCAMeasureChannels {
            get {
                return this.DCAMeasureChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.DCAMeasureChannelsField, value) != true)) {
                    this.DCAMeasureChannelsField = value;
                    this.RaisePropertyChanged("DCAMeasureChannels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.EnumEyeLinearityDefinition EyeLinearityDefinition {
            get {
                return this.EyeLinearityDefinitionField;
            }
            set {
                if ((this.EyeLinearityDefinitionField.Equals(value) != true)) {
                    this.EyeLinearityDefinitionField = value;
                    this.RaisePropertyChanged("EyeLinearityDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.EnumEyeWidthOpeningDefinition EyeWidthOpeningDefinition {
            get {
                return this.EyeWidthOpeningDefinitionField;
            }
            set {
                if ((this.EyeWidthOpeningDefinitionField.Equals(value) != true)) {
                    this.EyeWidthOpeningDefinitionField = value;
                    this.RaisePropertyChanged("EyeWidthOpeningDefinition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EyeWidthOpeningProbability {
            get {
                return this.EyeWidthOpeningProbabilityField;
            }
            set {
                if ((this.EyeWidthOpeningProbabilityField.Equals(value) != true)) {
                    this.EyeWidthOpeningProbabilityField = value;
                    this.RaisePropertyChanged("EyeWidthOpeningProbability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.EnumDCAOptions IterativeOptimization {
            get {
                return this.IterativeOptimizationField;
            }
            set {
                if ((this.IterativeOptimizationField.Equals(value) != true)) {
                    this.IterativeOptimizationField = value;
                    this.RaisePropertyChanged("IterativeOptimization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPrecursors {
            get {
                return this.MaxPrecursorsField;
            }
            set {
                if ((this.MaxPrecursorsField.Equals(value) != true)) {
                    this.MaxPrecursorsField = value;
                    this.RaisePropertyChanged("MaxPrecursors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfTaps {
            get {
                return this.NumOfTapsField;
            }
            set {
                if ((this.NumOfTapsField.Equals(value) != true)) {
                    this.NumOfTapsField = value;
                    this.RaisePropertyChanged("NumOfTaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.EnumDCAOptions TDEQThresholdOptimization {
            get {
                return this.TDEQThresholdOptimizationField;
            }
            set {
                if ((this.TDEQThresholdOptimizationField.Equals(value) != true)) {
                    this.TDEQThresholdOptimizationField = value;
                    this.RaisePropertyChanged("TDEQThresholdOptimization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TapsPerUI {
            get {
                return this.TapsPerUIField;
            }
            set {
                if ((this.TapsPerUIField.Equals(value) != true)) {
                    this.TapsPerUIField = value;
                    this.RaisePropertyChanged("TapsPerUI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.EnumTEQualizerPreset TdecqConfigurationPreset {
            get {
                return this.TdecqConfigurationPresetField;
            }
            set {
                if ((this.TdecqConfigurationPresetField.Equals(value) != true)) {
                    this.TdecqConfigurationPresetField = value;
                    this.RaisePropertyChanged("TdecqConfigurationPreset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TesterClient_Console.InstrumentLockServiceFacadeClient.EnumTEQualizerPreset TdecqEqualizerPreset {
            get {
                return this.TdecqEqualizerPresetField;
            }
            set {
                if ((this.TdecqEqualizerPresetField.Equals(value) != true)) {
                    this.TdecqEqualizerPresetField = value;
                    this.RaisePropertyChanged("TdecqEqualizerPreset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bOffloadCompute {
            get {
                return this.bOffloadComputeField;
            }
            set {
                if ((this.bOffloadComputeField.Equals(value) != true)) {
                    this.bOffloadComputeField = value;
                    this.RaisePropertyChanged("bOffloadCompute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bSeperateAcqTEQ {
            get {
                return this.bSeperateAcqTEQField;
            }
            set {
                if ((this.bSeperateAcqTEQField.Equals(value) != true)) {
                    this.bSeperateAcqTEQField = value;
                    this.RaisePropertyChanged("bSeperateAcqTEQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nChannelUsed {
            get {
                return this.nChannelUsedField;
            }
            set {
                if ((this.nChannelUsedField.Equals(value) != true)) {
                    this.nChannelUsedField = value;
                    this.RaisePropertyChanged("nChannelUsed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DCASetupcmd", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.PAMSetupcmd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.TEQualizerSetupcmd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.CRUSetupcmd))]
    public partial class DCASetupcmd : TesterClient_Console.InstrumentLockServiceFacadeClient.MeasurementCmd {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] arCustomCmdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] arCustomCmds {
            get {
                return this.arCustomCmdsField;
            }
            set {
                if ((object.ReferenceEquals(this.arCustomCmdsField, value) != true)) {
                    this.arCustomCmdsField = value;
                    this.RaisePropertyChanged("arCustomCmds");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumEyeLinearityDefinition", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    public enum EnumEyeLinearityDefinition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RLMC94 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RLMA120 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EYE = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumEyeWidthOpeningDefinition", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    public enum EnumEyeWidthOpeningDefinition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZHITs = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROBability = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumDCAOptions", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    public enum EnumDCAOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OFF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ON = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumTEQualizerPreset", Namespace="http://schemas.datacontract.org/2004/07/InstrumentsLib.Tools.Instruments.Oscillos" +
        "cope")]
    public enum EnumTEQualizerPreset : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FCPI05 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FCPI13 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BS22 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BS32 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BSFinal = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CD30 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CD = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CDFinal = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="sharedProtocol", Namespace="http://schemas.datacontract.org/2004/07/InstrumentLockServices")]
    public enum sharedProtocol : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiCon = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InstrumentLockServiceFacadeClient.IInstrumentLockServiceFacade")]
    public interface IInstrumentLockServiceFacade {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/Add", ReplyAction="http://tempuri.org/IInstrumentLockService/AddResponse")]
        double Add(double a, double b, string ThreadID, string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/AddAndDelay", ReplyAction="http://tempuri.org/IInstrumentLockService/AddAndDelayResponse")]
        double AddAndDelay(double a, double b, int delayInSec, string ThreadID, string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/intDivide", ReplyAction="http://tempuri.org/IInstrumentLockService/intDivideResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TesterClient_Console.InstrumentLockServiceFacadeClient.MathFault), Action="http://tempuri.org/IInstrumentLockService/intDivideMathFaultFault", Name="MathFault", Namespace="http://schemas.datacontract.org/2004/07/InstrumentLockServices")]
        int intDivide(double a, double b, string ThreadID, string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/getInstrumentLock", ReplyAction="http://tempuri.org/IInstrumentLockService/getInstrumentLockResponse")]
        bool getInstrumentLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedInstrument instr, string ThreadID, string MachineName, int nChannelInEachMeasurementGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/getInstrumentLockWithReturn", ReplyAction="http://tempuri.org/IInstrumentLockService/getInstrumentLockWithReturnResponse")]
        bool getInstrumentLockWithReturn(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedInstrument instr, string sThreadID, string sMachineName, ref TesterClient_Console.InstrumentLockServiceFacadeClient.WCFScopeConfig DCA, ref TesterClient_Console.InstrumentLockServiceFacadeClient.WCFProtocolXConfig Protocol, int nChannelInEachMeasurementGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/releaseInstrumentLock", ReplyAction="http://tempuri.org/IInstrumentLockService/releaseInstrumentLockResponse")]
        bool releaseInstrumentLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedInstrument instr, string ThreadID, string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/getProtocolLock", ReplyAction="http://tempuri.org/IInstrumentLockService/getProtocolLockResponse")]
        bool getProtocolLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedProtocol protocol, string ThreadID, string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/releaseProtocolLock", ReplyAction="http://tempuri.org/IInstrumentLockService/releaseProtocolLockResponse")]
        bool releaseProtocolLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedProtocol protocol, string ThreadID, string MachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInstrumentLockService/getConnectedInfo", ReplyAction="http://tempuri.org/IInstrumentLockService/getConnectedInfoResponse")]
        void getConnectedInfo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInstrumentLockServiceFacadeChannel : TesterClient_Console.InstrumentLockServiceFacadeClient.IInstrumentLockServiceFacade, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InstrumentLockServiceFacadeClient : System.ServiceModel.ClientBase<TesterClient_Console.InstrumentLockServiceFacadeClient.IInstrumentLockServiceFacade>, TesterClient_Console.InstrumentLockServiceFacadeClient.IInstrumentLockServiceFacade {
        
        public InstrumentLockServiceFacadeClient() {
        }
        
        public InstrumentLockServiceFacadeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InstrumentLockServiceFacadeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstrumentLockServiceFacadeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstrumentLockServiceFacadeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Add(double a, double b, string ThreadID, string MachineName) {
            return base.Channel.Add(a, b, ThreadID, MachineName);
        }
        
        public double AddAndDelay(double a, double b, int delayInSec, string ThreadID, string MachineName) {
            return base.Channel.AddAndDelay(a, b, delayInSec, ThreadID, MachineName);
        }
        
        public int intDivide(double a, double b, string ThreadID, string MachineName) {
            return base.Channel.intDivide(a, b, ThreadID, MachineName);
        }
        
        public bool getInstrumentLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedInstrument instr, string ThreadID, string MachineName, int nChannelInEachMeasurementGroup) {
            return base.Channel.getInstrumentLock(instr, ThreadID, MachineName, nChannelInEachMeasurementGroup);
        }
        
        public bool getInstrumentLockWithReturn(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedInstrument instr, string sThreadID, string sMachineName, ref TesterClient_Console.InstrumentLockServiceFacadeClient.WCFScopeConfig DCA, ref TesterClient_Console.InstrumentLockServiceFacadeClient.WCFProtocolXConfig Protocol, int nChannelInEachMeasurementGroup) {
            return base.Channel.getInstrumentLockWithReturn(instr, sThreadID, sMachineName, ref DCA, ref Protocol, nChannelInEachMeasurementGroup);
        }
        
        public bool releaseInstrumentLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedInstrument instr, string ThreadID, string MachineName) {
            return base.Channel.releaseInstrumentLock(instr, ThreadID, MachineName);
        }
        
        public bool getProtocolLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedProtocol protocol, string ThreadID, string MachineName) {
            return base.Channel.getProtocolLock(protocol, ThreadID, MachineName);
        }
        
        public bool releaseProtocolLock(TesterClient_Console.InstrumentLockServiceFacadeClient.sharedProtocol protocol, string ThreadID, string MachineName) {
            return base.Channel.releaseProtocolLock(protocol, ThreadID, MachineName);
        }
        
        public void getConnectedInfo() {
            base.Channel.getConnectedInfo();
        }
    }
}
